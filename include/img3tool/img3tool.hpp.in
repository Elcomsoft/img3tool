//
//  img3tool.hpp
//  img3tool
//
//  Created by tihmstar on 06.07.21.
//

#ifndef img3tool_hpp
#define img3tool_hpp

#if @HEADER_HAVE_PLIST@ //HAVE_PLIST
#include <plist/plist.h>
#endif //HAVE_PLIST

#include <libgeneral/Mem.hpp>
#include <vector>
#include <iostream>
#include <stdlib.h>
#include <stdint.h>

namespace tihmstar {
    namespace img3tool {
        const char *version();

        void printIMG3(const void *buf, size_t size);

        tihmstar::Mem getValFromIMG3(const void *buf, size_t size, uint32_t val);
        tihmstar::Mem getPayloadFromIMG3(const void *buf, size_t size, const char *decryptIv = NULL, const char *decryptKey = NULL, const char **outUsedCompression = NULL);

        tihmstar::Mem getEmptyIMG3Container(uint32_t identifier);
        tihmstar::Mem appendPayloadToIMG3(const tihmstar::Mem &img3, uint32_t identifier, const void *payload, size_t payloadSize, const char *compression = NULL);
        tihmstar::Mem appendPayloadToIMG3(const tihmstar::Mem &img3, uint32_t identifier, const tihmstar::Mem &payload, const char *compression = NULL);

        tihmstar::Mem replaceDATAinIMG3(const tihmstar::Mem &img3, const void *payload, size_t payloadSize, const char *compression = NULL);
        tihmstar::Mem replaceDATAinIMG3(const tihmstar::Mem &img3, const tihmstar::Mem &payload, const char *compression = NULL);

        tihmstar::Mem renameIMG3(const void *buf, size_t size, const char *type);
        tihmstar::Mem removeTagFromIMG3(const void *buf, size_t size, uint32_t type);
        
        uint32_t getImg3ImageType(const void *buf, size_t size);
    
        bool img3ContainsKBAG(const void *buf, size_t size);
        std::string getKBAG(const void *buf, size_t size, int kbagNum);

#if @HEADER_HAVE_PLIST@ //HAVE_PLIST
        tihmstar::Mem signIMG3WithSHSH(const void *buf, size_t size, plist_t p_shshfile);
#endif //HAVE_PLIST
    
#if @HEADER_HAVE_CRYPTO@ //HAVE_CRYPTO
        bool verifySignedIMG3File(const void *buf, size_t size);
#if @HEADER_HAVE_PLIST@ //HAVE_PLIST
        bool verifySignedIMG3FileForSHSH(const void *buf, size_t size, plist_t p_shshfile);
#endif //HAVE_PLIST
        tihmstar::Mem decryptPayload(const tihmstar::Mem &payload, const char *decryptIv, const char *decryptKey);
#endif //HAVE_CRYPTO
    
    };
};
#endif /* img3tool_hpp */
